on:
  push:
    tags:
      - 'v*'

name: Release

jobs:

  create-release:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Lookup version
        run: echo ::set-env name=version::$(awk -F'"' '/^version/ {print $2}' ffi/Cargo.toml | head -n 1)
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: alass-ffi v${{ env.version }}
          draft: false
          prerelease: false
      - name: Generate Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release-url.txt
      - name: Upload Release URL File
        uses: actions/upload-artifact@v1
        with:
          name: release-url
          path: release-url.txt

  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
        arch:
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.arch }}
          override: true
          profile: minimal
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --package alass-ffi --target ${{ matrix.arch }}
      - name: Generate release bundle
        id: package
        env:
          TARGET: ${{ matrix.arch }}
          PLATFORM: linux
        run: bin/bundle-release.sh
        shell: bash
      - name: Download Release URL File
        uses: actions/download-artifact@v1
        with:
          name: release-url
      - name: Output Release URL
        id: release_url
        run: echo ::set-output name=release_url::$(cat release-url/release-url.txt)
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_url.outputs.release_url }}
          asset_path: ./${{ steps.package.outputs.bundle_path }}
          asset_name: ${{ steps.package.outputs.bundle_file }}
          asset_content_type: application/gzip

  macos:
    name: macos
    runs-on: macos-10.15
    strategy:
      matrix:
        toolchain:
          - stable
        arch:
          - x86_64-apple-darwin
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.arch }}
          override: true
          profile: minimal
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --package alass-ffi --target ${{ matrix.arch }}
      - name: Generate release bundle
        id: package
        env:
          TARGET: ${{ matrix.arch }}
          PLATFORM: macos
        run: bin/bundle-release.sh
        shell: bash
      - name: Download Release URL File
        uses: actions/download-artifact@v1
        with:
          name: release-url
      - name: Output Release URL
        id: release_url
        run: echo ::set-output name=release_url::$(cat release-url/release-url.txt)
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_url.outputs.release_url }}
          asset_path: ./${{ steps.package.outputs.bundle_path }}
          asset_name: ${{ steps.package.outputs.bundle_file }}
          asset_content_type: application/gzip

  windows:
    name: Windows
    runs-on: windows-2019
    strategy:
      matrix:
        toolchain:
          - stable
        arch:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.arch }}
          override: true
          profile: minimal
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --package alass-ffi --target ${{ matrix.arch }}
      - name: Generate release bundle
        id: package
        env:
          TARGET: ${{ matrix.arch }}
          PLATFORM: windows
        run: bin/bundle-release.sh
        shell: bash
      - name: Download Release URL File
        uses: actions/download-artifact@v1
        with:
          name: release-url
      - name: Output Release URL
        id: release_url
        shell: bash
        run: echo ::set-output name=release_url::$(cat release-url/release-url.txt)
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_url.outputs.release_url }}
          asset_path: ./${{ steps.package.outputs.bundle_path }}
          asset_name: ${{ steps.package.outputs.bundle_file }}
          asset_content_type: application/zip
